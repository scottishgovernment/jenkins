#!/bin/sh
set -ex
repo={{repo}}
version={{version}}

git clean -fdx -e node_modules
git update-ref --no-deref HEAD HEAD

checksum=node_modules/.npm
if [ ! -e "$checksum" ] || ! sha1sum --status -c "$checksum" ; then
  if [ -f package-lock.json ]; then
    lock_file=package-lock.json
  else
    lock_file=npm-shrinkwrap.json
  fi
  mkdir -p node_modules
  npm prune &&
    npm install &&
    sha1sum package.json "$lock_file" > "$checksum"
fi

install_latest() {
  local property=dependencies
  local flag=--save
  if [ "$1" = "--dev" ]; then
    flag=--save-dev
    property=devDependencies
  fi
  local packages
  local pkg_vers
  local pkg
  packages=$(jq -r ".$property"' // [] | to_entries[] | select(.value == "latest") | .key' package.json)
  for pkg in $packages; do
    pkg_vers="${pkg_vers:+$pkg_vers }$pkg@latest"
  done
  if [ -n "$pkg_vers" ]; then
    npm install $flag --production --no-optional $pkg_vers
  fi
}

install_latest
install_latest --dev

jq .version=\"${version}\" package.json | sponge package.json
git add package.json
git commit -m "Set version to ${version}"
if [ -x build ]; then
  ./build --ci -v "${version}"
fi

git tag -a -m "Build ${version}" ${version}
git push --tags ssh://git@stash.digital.gov.uk:7999/mgv/${repo}.git "${version}"

{{#local}}
npm publish --registry=http://nexus/repository/npm/
{{/local}}
{{#npmjs}}
npm publish --registry=https://registry.npmjs.com/ --access public
{{/npmjs}}

{{#debian}}
mvn deploy:deploy-file \
  --batch-mode \
  -Dfile={{debian}}_${version}_all.deb \
  -DgroupId={{groupId}} \
  -DartifactId={{artifactId}} \
  -Dversion="${version}" \
  -Dpackaging=deb \
  -DrepositoryId=release \
  -Durl=http://nexus/repository/releases/
{{/debian}}
